syntax = "proto3";
option java_package = "Grpc";

message getUserByEmailRequest{
  string request = 1;
}
message getUserByEmailResponse{
  string response = 1;
  int32 status = 2;
}
message registerUserRequest{
  string request = 1;
}
message registerUserResponse{
  string response = 1;
  int32 status = 2;
}
message getNotAcceptedUserRequest{
  string request = 1;
}
message getNotAcceptedUserResponse{
  string response = 1;
  int32 status = 2;
}
message acceptedUserRequest{
  string request = 1;
}
message accepteduserResponse{
  string response = 1;
  int32 status = 2;
}
message bannedUserRequest{
  string request = 1;
}
message bannedUserResponse{
  string response = 1;
  int32 status = 2;
}
message removeBannedUserRequest{
  string request = 1;
}
message removeBannedUserResponse{
  string response = 1;
  int32 status = 2;
}
message getBannedUserRequest{
  string request = 1;
}
message getBannedUserResponse{
  string response = 1;
  int32 status = 2;
}
message getAccountUserByEmailRequest{
  string request = 1;
}
message getAccotuntUserByEmailResponse{
  string response = 1;
  int32 status = 2;
}
service UserService{
  rpc getUserAndRoleByEmail(getUserByEmailRequest) returns(getUserByEmailResponse);
  rpc registerUser(registerUserRequest) returns(registerUserResponse);
  rpc getNotAcceptedUser(getNotAcceptedUserRequest) returns(getNotAcceptedUserResponse);
  rpc acceptedUser(acceptedUserRequest) returns(accepteduserResponse);
  rpc bannedUser(bannedUserRequest) returns(bannedUserResponse);
  rpc removeBannedUser(removeBannedUserRequest) returns(removeBannedUserResponse);
  rpc getBannedUser(getBannedUserRequest) returns(getBannedUserResponse);
  rpc getAccountUserByEmail(getAccountUserByEmailRequest) returns(getAccotuntUserByEmailResponse);
}